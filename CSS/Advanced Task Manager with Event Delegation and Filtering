<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Task Manager</title>
    <style>
        body { font-family: Arial, sans-serif; text-align: center; }
        #taskContainer { margin: 20px auto; width: 300px; }
        ul { list-style: none; padding: 0; }
        li { display: flex; align-items: center; justify-content: space-between; padding: 5px; border-bottom: 1px solid #ccc; }
        .completed { text-decoration: line-through; color: gray; }
        button { margin: 5px; cursor: pointer; }
    </style>
</head>
<body>

    <h2>Task Manager</h2>

    <div id="taskContainer">
        <input type="text" id="taskInput" placeholder="Enter task">
        <button id="addTaskBtn">Add Task</button>

        <ul id="taskList"></ul>

        <div>
            <button id="allTasks">All Tasks</button>
            <button id="completedTasks">Completed</button>
            <button id="incompleteTasks">Incomplete</button>
            <button id="sortTasks">Sort A-Z</button>
        </div>

        <p>Total Tasks: <span id="totalCount">0</span></p>
        <p>Completed Tasks: <span id="completedCount">0</span></p>
        <p>Incomplete Tasks: <span id="incompleteCount">0</span></p>
    </div>

    <script>
        const taskInput = document.getElementById("taskInput");
        const addTaskBtn = document.getElementById("addTaskBtn");
        const taskList = document.getElementById("taskList");
        const allTasksBtn = document.getElementById("allTasks");
        const completedTasksBtn = document.getElementById("completedTasks");
        const incompleteTasksBtn = document.getElementById("incompleteTasks");
        const sortTasksBtn = document.getElementById("sortTasks");

        const totalCount = document.getElementById("totalCount");
        const completedCount = document.getElementById("completedCount");
        const incompleteCount = document.getElementById("incompleteCount");

        let tasks = [];

        // Function to update UI
        function updateUI(filteredTasks = tasks) {
            taskList.innerHTML = "";
            filteredTasks.forEach(task => {
                const li = document.createElement("li");
                li.innerHTML = `
                    <input type="checkbox" ${task.completed ? "checked" : ""} data-id="${task.id}">
                    <span class="${task.completed ? "completed" : ""}">${task.text}</span>
                    <button data-id="${task.id}" class="delete">‚ùå</button>
                `;
                taskList.appendChild(li);
            });

            // Update counters
            totalCount.textContent = tasks.length;
            completedCount.textContent = tasks.filter(task => task.completed).length;
            incompleteCount.textContent = tasks.filter(task => !task.completed).length;
        }

        // Add task
        addTaskBtn.addEventListener("click", () => {
            const taskText = taskInput.value.trim();
            if (taskText === "") return alert("Enter a valid task!");

            tasks.push({ id: Date.now(), text: taskText, completed: false });
            taskInput.value = "";
            updateUI();
        });

        // Event delegation for delete & toggle
        taskList.addEventListener("click", (e) => {
            const id = Number(e.target.dataset.id);

            // Delete task
            if (e.target.classList.contains("delete")) {
                tasks = tasks.filter(task => task.id !== id);
            }
            
            // Toggle completion
            if (e.target.type === "checkbox") {
                const task = tasks.find(task => task.id === id);
                task.completed = e.target.checked;
            }

            updateUI();
        });

        // Filter: All Tasks
        allTasksBtn.addEventListener("click", () => updateUI());

        // Filter: Completed Tasks
        completedTasksBtn.addEventListener("click", () => {
            updateUI(tasks.filter(task => task.completed));
        });

        // Filter: Incomplete Tasks
        incompleteTasksBtn.addEventListener("click", () => {
            updateUI(tasks.filter(task => !task.completed));
        });

        // Sort tasks alphabetically
        sortTasksBtn.addEventListener("click", () => {
            tasks.sort((a, b) => a.text.localeCompare(b.text));
            updateUI();
        });

    </script>
</body>
</html>
